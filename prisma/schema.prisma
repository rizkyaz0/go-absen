datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ================= Roles =================
model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

// ================= Status =================
model Status {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

// ================= Users =================
model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String         @unique
  password      String
  roleId        Int
  statusId      Int
  role          Role           @relation(fields: [roleId], references: [id])
  status        Status         @relation(fields: [statusId], references: [id])
  absences      Absence[]
  leaveRequests LeaveRequest[]
  leaveQuotas   LeaveQuota[] // âœ… Tambahkan relasi balik ke LeaveQuota
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

// ================= Shifts =================
model Shift {
  id        Int       @id @default(autoincrement())
  name      String
  startTime DateTime
  endTime   DateTime
  absences  Absence[]
}

// ================= Absences =================
model Absence {
  id        Int       @id @default(autoincrement())
  userId    Int
  shiftId   Int?
  date      DateTime
  checkIn   DateTime?
  checkOut  DateTime?
  status    String
  location  String?
  note      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user  User   @relation(fields: [userId], references: [id])
  shift Shift? @relation(fields: [shiftId], references: [id])
}

// ================= Leave Requests =================
model LeaveRequest {
  id         Int      @id @default(autoincrement())
  userId     Int
  startDate  DateTime
  endDate    DateTime
  type       String
  status     String
  reason     String?
  approvedBy Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

// ================= Holidays =================
model Holiday {
  id        Int      @id @default(autoincrement())
  date      DateTime @unique
  name      String
  isHalfDay Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ================= Leave Reset Logs =================
model LeaveReset {
  id      Int      @id @default(autoincrement())
  resetAt DateTime @default(now())
}

// ================= Leave Quotas =================
model LeaveQuota {
  id     Int @id @default(autoincrement())
  userId Int
  year   Int
  month  Int
  quota  Int @default(2)

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, year, month])
}
